name: basic
vertexShader: |
  #version 330 core
  layout (location = 0) in vec3 position;
  layout (location = 2) in vec3 barycentric;

  uniform mat4 MVPmatrix;

  out vec3 Barycentric;

  void main(void) {
    gl_Position = MVPmatrix * vec4(position, 1.);
    Barycentric = barycentric;
  }
fragmentShader: |
  #version 330 core
  precision mediump float;

  uniform vec4 FillColour;
  uniform vec4 StrokeColour;
  uniform float StrokeSize;

  in vec3 Barycentric;

  out vec4 finalColour;

  float ssize = StrokeSize / 2;
  bool strokeArea = Barycentric.x < ssize || Barycentric.y < ssize || Barycentric.z < ssize;
  bool showStroke = StrokeColour.a >= 0;
  bool showFill = FillColour.a >= 0;

  void main(void) {
    if(showStroke && strokeArea) {
      finalColour = StrokeColour;
    } else if (showFill) {
      finalColour = FillColour;
    } else {
      discard;
    }
  }
