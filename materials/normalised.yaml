name: normalised
vertexShader: |
  #version 330 core

  layout (location = 0) in vec3 position;
  layout (location = 3) in vec3 normals;

  uniform mat4 MVPmatrix;

  out vec3 Normal;

  void main(void) {
    gl_Position = MVPmatrix * vec4(position, 1.);
    Normal = normalize((MVPmatrix * vec4(normals, 1)).xyz);
  }
fragmentShader: |
  #version 330 core
  precision mediump float;

  in vec3 Normal;
  in vec3 Barycentric;

  out vec4 finalColour;

  void main(void) {
    finalColour = vec4( 0.5 * Normal + 0.5, 1.0 );
  }
